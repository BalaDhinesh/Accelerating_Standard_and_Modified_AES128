
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Executing script file `synth.ys' --

1. Executing Verilog-2005 frontend: modified_aes128_v2_top.v
Parsing Verilog input from `modified_aes128_v2_top.v' to AST representation.
Generating RTLIL representation for module `\MODIFIED_AES128_V2'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: generate_key.v
Parsing Verilog input from `generate_key.v' to AST representation.
Generating RTLIL representation for module `\GENERATE_KEY'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: mix_columns.v
Parsing Verilog input from `mix_columns.v' to AST representation.
Generating RTLIL representation for module `\MIX_COLUMNS'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: last_round.v
Parsing Verilog input from `last_round.v' to AST representation.
Generating RTLIL representation for module `\LAST_ROUND'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: forward_substitution_box.v
Parsing Verilog input from `forward_substitution_box.v' to AST representation.
Generating RTLIL representation for module `\FORWARD_SUBSTITUTION_BOX'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: round_iteration.v
Parsing Verilog input from `round_iteration.v' to AST representation.
Generating RTLIL representation for module `\ROUND_ITERATION'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: shift_rows.v
Parsing Verilog input from `shift_rows.v' to AST representation.
Generating RTLIL representation for module `\SHIFT_ROWS'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: sub_bytes.v
Parsing Verilog input from `sub_bytes.v' to AST representation.
Generating RTLIL representation for module `\SUB_BYTES'.
Successfully finished Verilog frontend.

9. Executing HIERARCHY pass (managing design hierarchy).

9.1. Analyzing design hierarchy..
Top module:  \MODIFIED_AES128_V2
Used module:     \LAST_ROUND
Used module:         \SHIFT_ROWS
Used module:         \SUB_BYTES
Used module:             \FORWARD_SUBSTITUTION_BOX
Used module:         \GENERATE_KEY
Used module:     \ROUND_ITERATION
Used module:         \MIX_COLUMNS

9.2. Analyzing design hierarchy..
Top module:  \MODIFIED_AES128_V2
Used module:     \LAST_ROUND
Used module:         \SHIFT_ROWS
Used module:         \SUB_BYTES
Used module:             \FORWARD_SUBSTITUTION_BOX
Used module:         \GENERATE_KEY
Used module:     \ROUND_ITERATION
Used module:         \MIX_COLUMNS
Removed 0 unused modules.

10. Executing PROC pass (convert processes to netlists).

10.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

10.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$forward_substitution_box.v:9$740 in module FORWARD_SUBSTITUTION_BOX.
Marked 4 switch rules as full_case in process $proc$generate_key.v:21$6 in module GENERATE_KEY.
Removed a total of 0 dead cases.

10.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SHIFT_ROWS.$proc$shift_rows.v:7$744'.
  Set init value: \SHIFT_DATA_REG = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

10.4. Executing PROC_ARST pass (detect async resets in processes).

10.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SUB_BYTES.$proc$sub_bytes.v:55$773'.
     1/1: $0\SB_DATA[127:0]
Creating decoders for process `\SHIFT_ROWS.$proc$shift_rows.v:7$744'.
     1/1: $1\SHIFT_DATA_REG[127:0]
Creating decoders for process `\SHIFT_ROWS.$proc$shift_rows.v:9$743'.
     1/16: $0\SHIFT_DATA_REG[127:0] [7:0]
     2/16: $0\SHIFT_DATA_REG[127:0] [15:8]
     3/16: $0\SHIFT_DATA_REG[127:0] [23:16]
     4/16: $0\SHIFT_DATA_REG[127:0] [31:24]
     5/16: $0\SHIFT_DATA_REG[127:0] [39:32]
     6/16: $0\SHIFT_DATA_REG[127:0] [47:40]
     7/16: $0\SHIFT_DATA_REG[127:0] [55:48]
     8/16: $0\SHIFT_DATA_REG[127:0] [63:56]
     9/16: $0\SHIFT_DATA_REG[127:0] [71:64]
    10/16: $0\SHIFT_DATA_REG[127:0] [79:72]
    11/16: $0\SHIFT_DATA_REG[127:0] [87:80]
    12/16: $0\SHIFT_DATA_REG[127:0] [95:88]
    13/16: $0\SHIFT_DATA_REG[127:0] [103:96]
    14/16: $0\SHIFT_DATA_REG[127:0] [111:104]
    15/16: $0\SHIFT_DATA_REG[127:0] [119:112]
    16/16: $0\SHIFT_DATA_REG[127:0] [127:120]
Creating decoders for process `\ROUND_ITERATION.$proc$round_iteration.v:17$741'.
     1/1: $0\OUT_DATA[127:0]
Creating decoders for process `\FORWARD_SUBSTITUTION_BOX.$proc$forward_substitution_box.v:9$740'.
     1/1: $0\C_REG[7:0]
Creating decoders for process `\LAST_ROUND.$proc$last_round.v:15$738'.
     1/1: $0\OUT_DATA[127:0]
Creating decoders for process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
     1/208: $0\MIXED_DATA_REG[127:0] [7:0]
     2/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN[7:0]$125 [0]
     3/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN[7:0]$125 [1]
     4/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN[7:0]$125 [2]
     5/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN[7:0]$125 [3]
     6/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN[7:0]$125 [4]
     7/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN[7:0]$125 [5]
     8/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN[7:0]$125 [6]
     9/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN[7:0]$125 [7]
    10/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\IN4[7:0]$129
    11/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\IN3[7:0]$128
    12/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\IN2[7:0]$127
    13/208: $0$func$\MIXCOLUMN$mix_columns.v:28$48$\IN1[7:0]$126
    14/208: $0\MIXED_DATA_REG[127:0] [15:8]
    15/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN[7:0]$120 [0]
    16/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN[7:0]$120 [1]
    17/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN[7:0]$120 [2]
    18/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN[7:0]$120 [3]
    19/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN[7:0]$120 [4]
    20/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN[7:0]$120 [5]
    21/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN[7:0]$120 [6]
    22/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN[7:0]$120 [7]
    23/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\IN4[7:0]$124
    24/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\IN3[7:0]$123
    25/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\IN2[7:0]$122
    26/208: $0$func$\MIXCOLUMN$mix_columns.v:27$47$\IN1[7:0]$121
    27/208: $0\MIXED_DATA_REG[127:0] [23:16]
    28/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN[7:0]$115 [0]
    29/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN[7:0]$115 [1]
    30/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN[7:0]$115 [2]
    31/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN[7:0]$115 [3]
    32/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN[7:0]$115 [4]
    33/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN[7:0]$115 [5]
    34/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN[7:0]$115 [6]
    35/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN[7:0]$115 [7]
    36/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\IN4[7:0]$119
    37/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\IN3[7:0]$118
    38/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\IN2[7:0]$117
    39/208: $0$func$\MIXCOLUMN$mix_columns.v:26$46$\IN1[7:0]$116
    40/208: $0\MIXED_DATA_REG[127:0] [31:24]
    41/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN[7:0]$110 [0]
    42/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN[7:0]$110 [1]
    43/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN[7:0]$110 [2]
    44/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN[7:0]$110 [3]
    45/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN[7:0]$110 [4]
    46/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN[7:0]$110 [5]
    47/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN[7:0]$110 [6]
    48/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN[7:0]$110 [7]
    49/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\IN4[7:0]$114
    50/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\IN3[7:0]$113
    51/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\IN2[7:0]$112
    52/208: $0$func$\MIXCOLUMN$mix_columns.v:25$45$\IN1[7:0]$111
    53/208: $0\MIXED_DATA_REG[127:0] [39:32]
    54/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN[7:0]$105 [0]
    55/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN[7:0]$105 [1]
    56/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN[7:0]$105 [2]
    57/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN[7:0]$105 [3]
    58/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN[7:0]$105 [4]
    59/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN[7:0]$105 [5]
    60/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN[7:0]$105 [6]
    61/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN[7:0]$105 [7]
    62/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\IN4[7:0]$109
    63/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\IN3[7:0]$108
    64/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\IN2[7:0]$107
    65/208: $0$func$\MIXCOLUMN$mix_columns.v:23$44$\IN1[7:0]$106
    66/208: $0\MIXED_DATA_REG[127:0] [47:40]
    67/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN[7:0]$100 [0]
    68/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN[7:0]$100 [1]
    69/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN[7:0]$100 [2]
    70/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN[7:0]$100 [3]
    71/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN[7:0]$100 [4]
    72/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN[7:0]$100 [5]
    73/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN[7:0]$100 [6]
    74/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN[7:0]$100 [7]
    75/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\IN4[7:0]$104
    76/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\IN3[7:0]$103
    77/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\IN2[7:0]$102
    78/208: $0$func$\MIXCOLUMN$mix_columns.v:22$43$\IN1[7:0]$101
    79/208: $0\MIXED_DATA_REG[127:0] [55:48]
    80/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN[7:0]$95 [0]
    81/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN[7:0]$95 [1]
    82/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN[7:0]$95 [2]
    83/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN[7:0]$95 [3]
    84/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN[7:0]$95 [4]
    85/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN[7:0]$95 [5]
    86/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN[7:0]$95 [6]
    87/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN[7:0]$95 [7]
    88/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\IN4[7:0]$99
    89/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\IN3[7:0]$98
    90/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\IN2[7:0]$97
    91/208: $0$func$\MIXCOLUMN$mix_columns.v:21$42$\IN1[7:0]$96
    92/208: $0\MIXED_DATA_REG[127:0] [63:56]
    93/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN[7:0]$90 [0]
    94/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN[7:0]$90 [1]
    95/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN[7:0]$90 [2]
    96/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN[7:0]$90 [3]
    97/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN[7:0]$90 [4]
    98/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN[7:0]$90 [5]
    99/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN[7:0]$90 [6]
   100/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN[7:0]$90 [7]
   101/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\IN4[7:0]$94
   102/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\IN3[7:0]$93
   103/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\IN2[7:0]$92
   104/208: $0$func$\MIXCOLUMN$mix_columns.v:20$41$\IN1[7:0]$91
   105/208: $0\MIXED_DATA_REG[127:0] [71:64]
   106/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN[7:0]$85 [0]
   107/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN[7:0]$85 [1]
   108/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN[7:0]$85 [2]
   109/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN[7:0]$85 [3]
   110/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN[7:0]$85 [4]
   111/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN[7:0]$85 [5]
   112/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN[7:0]$85 [6]
   113/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN[7:0]$85 [7]
   114/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\IN4[7:0]$89
   115/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\IN3[7:0]$88
   116/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\IN2[7:0]$87
   117/208: $0$func$\MIXCOLUMN$mix_columns.v:18$40$\IN1[7:0]$86
   118/208: $0\MIXED_DATA_REG[127:0] [79:72]
   119/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN[7:0]$80 [0]
   120/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN[7:0]$80 [1]
   121/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN[7:0]$80 [2]
   122/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN[7:0]$80 [3]
   123/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN[7:0]$80 [4]
   124/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN[7:0]$80 [5]
   125/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN[7:0]$80 [6]
   126/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN[7:0]$80 [7]
   127/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\IN4[7:0]$84
   128/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\IN3[7:0]$83
   129/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\IN2[7:0]$82
   130/208: $0$func$\MIXCOLUMN$mix_columns.v:17$39$\IN1[7:0]$81
   131/208: $0\MIXED_DATA_REG[127:0] [87:80]
   132/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN[7:0]$75 [0]
   133/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN[7:0]$75 [1]
   134/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN[7:0]$75 [2]
   135/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN[7:0]$75 [3]
   136/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN[7:0]$75 [4]
   137/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN[7:0]$75 [5]
   138/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN[7:0]$75 [6]
   139/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN[7:0]$75 [7]
   140/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\IN4[7:0]$79
   141/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\IN3[7:0]$78
   142/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\IN2[7:0]$77
   143/208: $0$func$\MIXCOLUMN$mix_columns.v:16$38$\IN1[7:0]$76
   144/208: $0\MIXED_DATA_REG[127:0] [95:88]
   145/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN[7:0]$70 [0]
   146/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN[7:0]$70 [1]
   147/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN[7:0]$70 [2]
   148/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN[7:0]$70 [3]
   149/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN[7:0]$70 [4]
   150/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN[7:0]$70 [5]
   151/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN[7:0]$70 [6]
   152/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN[7:0]$70 [7]
   153/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\IN4[7:0]$74
   154/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\IN3[7:0]$73
   155/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\IN2[7:0]$72
   156/208: $0$func$\MIXCOLUMN$mix_columns.v:15$37$\IN1[7:0]$71
   157/208: $0\MIXED_DATA_REG[127:0] [103:96]
   158/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN[7:0]$65 [0]
   159/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN[7:0]$65 [1]
   160/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN[7:0]$65 [2]
   161/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN[7:0]$65 [3]
   162/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN[7:0]$65 [4]
   163/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN[7:0]$65 [5]
   164/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN[7:0]$65 [6]
   165/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN[7:0]$65 [7]
   166/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\IN4[7:0]$69
   167/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\IN3[7:0]$68
   168/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\IN2[7:0]$67
   169/208: $0$func$\MIXCOLUMN$mix_columns.v:13$36$\IN1[7:0]$66
   170/208: $0\MIXED_DATA_REG[127:0] [111:104]
   171/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN[7:0]$60 [0]
   172/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN[7:0]$60 [1]
   173/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN[7:0]$60 [2]
   174/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN[7:0]$60 [3]
   175/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN[7:0]$60 [4]
   176/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN[7:0]$60 [5]
   177/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN[7:0]$60 [6]
   178/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN[7:0]$60 [7]
   179/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\IN4[7:0]$64
   180/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\IN3[7:0]$63
   181/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\IN2[7:0]$62
   182/208: $0$func$\MIXCOLUMN$mix_columns.v:12$35$\IN1[7:0]$61
   183/208: $0\MIXED_DATA_REG[127:0] [119:112]
   184/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN[7:0]$50 [0]
   185/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN[7:0]$50 [1]
   186/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN[7:0]$50 [2]
   187/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN[7:0]$50 [3]
   188/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN[7:0]$50 [4]
   189/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN[7:0]$50 [5]
   190/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN[7:0]$50 [6]
   191/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN[7:0]$50 [7]
   192/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\IN4[7:0]$59
   193/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\IN3[7:0]$58
   194/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\IN2[7:0]$57
   195/208: $0$func$\MIXCOLUMN$mix_columns.v:11$34$\IN1[7:0]$51
   196/208: $0\MIXED_DATA_REG[127:0] [127:120]
   197/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN[7:0]$56 [0]
   198/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN[7:0]$56 [1]
   199/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN[7:0]$56 [2]
   200/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN[7:0]$56 [3]
   201/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN[7:0]$56 [4]
   202/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN[7:0]$56 [5]
   203/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN[7:0]$56 [6]
   204/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN[7:0]$56 [7]
   205/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\IN4[7:0]$55
   206/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\IN3[7:0]$54
   207/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\IN2[7:0]$53
   208/208: $0$func$\MIXCOLUMN$mix_columns.v:10$33$\IN1[7:0]$52
Creating decoders for process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
     1/16: $1$func$\RCON$generate_key.v:25$5$\RCON[31:0]$27
     2/16: $1$func$\RCON$generate_key.v:24$4$\RCON[31:0]$22
     3/16: $1$func$\RCON$generate_key.v:23$3$\RCON[31:0]$18
     4/16: $1$func$\RCON$generate_key.v:22$2$\RCON[31:0]$15
     5/16: $0\OUT_KEY[127:0] [31:0]
     6/16: $0$func$\RCON$generate_key.v:25$5$\RCON[31:0]$13
     7/16: $0$func$\RCON$generate_key.v:25$5$\ROUND_KEY[3:0]$14
     8/16: $0\OUT_KEY[127:0] [63:32]
     9/16: $0$func$\RCON$generate_key.v:24$4$\RCON[31:0]$9
    10/16: $0$func$\RCON$generate_key.v:24$4$\ROUND_KEY[3:0]$12
    11/16: $0\OUT_KEY[127:0] [95:64]
    12/16: $0$func$\RCON$generate_key.v:23$3$\RCON[31:0]$7
    13/16: $0$func$\RCON$generate_key.v:23$3$\ROUND_KEY[3:0]$8
    14/16: $0\OUT_KEY[127:0] [127:96]
    15/16: $0$func$\RCON$generate_key.v:22$2$\RCON[31:0]$10
    16/16: $0$func$\RCON$generate_key.v:22$2$\ROUND_KEY[3:0]$11

10.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\SUB_BYTES.\SB_DATA' from process `\SUB_BYTES.$proc$sub_bytes.v:55$773'.
No latch inferred for signal `\SHIFT_ROWS.\SHIFT_DATA_REG' from process `\SHIFT_ROWS.$proc$shift_rows.v:9$743'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:11$34$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:11$34$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.\MIXED_DATA_REG' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:10$33$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:10$33$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:10$33$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:10$33$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:10$33$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:11$34$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:11$34$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:11$34$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:12$35$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:12$35$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:12$35$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:12$35$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:12$35$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:13$36$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:13$36$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:13$36$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:13$36$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:13$36$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:15$37$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:15$37$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:15$37$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:15$37$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:15$37$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:16$38$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:16$38$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:16$38$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:16$38$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:16$38$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:17$39$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:17$39$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:17$39$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:17$39$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:17$39$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:18$40$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:18$40$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:18$40$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:18$40$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:18$40$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:20$41$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:20$41$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:20$41$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:20$41$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:20$41$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:21$42$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:21$42$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:21$42$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:21$42$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:21$42$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:22$43$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:22$43$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:22$43$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:22$43$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:22$43$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:23$44$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:23$44$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:23$44$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:23$44$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:23$44$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:25$45$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:25$45$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:25$45$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:25$45$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:25$45$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:26$46$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:26$46$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:26$46$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:26$46$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:26$46$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:27$47$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:27$47$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:27$47$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:27$47$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:27$47$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:28$48$\MIXCOLUMN' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:28$48$\IN1' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:28$48$\IN2' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:28$48$\IN3' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.
No latch inferred for signal `\MIX_COLUMNS.$func$\MIXCOLUMN$mix_columns.v:28$48$\IN4' from process `\MIX_COLUMNS.$proc$mix_columns.v:9$49'.

10.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ROUND_ITERATION.\OUT_DATA' using process `\ROUND_ITERATION.$proc$round_iteration.v:17$741'.
  created $dff cell `$procdff$1079' with positive edge clock.
Creating register for signal `\FORWARD_SUBSTITUTION_BOX.\C_REG' using process `\FORWARD_SUBSTITUTION_BOX.$proc$forward_substitution_box.v:9$740'.
  created $dff cell `$procdff$1080' with positive edge clock.
Creating register for signal `\LAST_ROUND.\OUT_DATA' using process `\LAST_ROUND.$proc$last_round.v:15$738'.
  created $dff cell `$procdff$1081' with positive edge clock.
Creating register for signal `\GENERATE_KEY.$func$\RCON$generate_key.v:23$3$\RCON' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1082' with positive edge clock.
Creating register for signal `\GENERATE_KEY.\OUT_KEY' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1083' with positive edge clock.
Creating register for signal `\GENERATE_KEY.$func$\RCON$generate_key.v:23$3$\ROUND_KEY' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1084' with positive edge clock.
Creating register for signal `\GENERATE_KEY.$func$\RCON$generate_key.v:24$4$\RCON' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1085' with positive edge clock.
Creating register for signal `\GENERATE_KEY.$func$\RCON$generate_key.v:22$2$\RCON' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1086' with positive edge clock.
Creating register for signal `\GENERATE_KEY.$func$\RCON$generate_key.v:22$2$\ROUND_KEY' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1087' with positive edge clock.
Creating register for signal `\GENERATE_KEY.$func$\RCON$generate_key.v:24$4$\ROUND_KEY' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1088' with positive edge clock.
Creating register for signal `\GENERATE_KEY.$func$\RCON$generate_key.v:25$5$\RCON' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1089' with positive edge clock.
Creating register for signal `\GENERATE_KEY.$func$\RCON$generate_key.v:25$5$\ROUND_KEY' using process `\GENERATE_KEY.$proc$generate_key.v:21$6'.
  created $dff cell `$procdff$1090' with positive edge clock.

10.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SUB_BYTES.$proc$sub_bytes.v:55$773'.
Removing empty process `SHIFT_ROWS.$proc$shift_rows.v:7$744'.
Removing empty process `SHIFT_ROWS.$proc$shift_rows.v:9$743'.
Removing empty process `ROUND_ITERATION.$proc$round_iteration.v:17$741'.
Found and cleaned up 1 empty switch in `\FORWARD_SUBSTITUTION_BOX.$proc$forward_substitution_box.v:9$740'.
Removing empty process `FORWARD_SUBSTITUTION_BOX.$proc$forward_substitution_box.v:9$740'.
Removing empty process `LAST_ROUND.$proc$last_round.v:15$738'.
Removing empty process `MIX_COLUMNS.$proc$mix_columns.v:9$49'.
Found and cleaned up 4 empty switches in `\GENERATE_KEY.$proc$generate_key.v:21$6'.
Removing empty process `GENERATE_KEY.$proc$generate_key.v:21$6'.
Cleaned up 5 empty switches.

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SUB_BYTES.
Optimizing module SHIFT_ROWS.
Optimizing module ROUND_ITERATION.
Optimizing module FORWARD_SUBSTITUTION_BOX.
<suppressed ~1 debug messages>
Optimizing module LAST_ROUND.
Optimizing module MIX_COLUMNS.
Optimizing module GENERATE_KEY.
<suppressed ~4 debug messages>
Optimizing module MODIFIED_AES128_V2.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SUB_BYTES'.
Finding identical cells in module `\SHIFT_ROWS'.
Finding identical cells in module `\ROUND_ITERATION'.
Finding identical cells in module `\FORWARD_SUBSTITUTION_BOX'.
Finding identical cells in module `\LAST_ROUND'.
Finding identical cells in module `\MIX_COLUMNS'.
Finding identical cells in module `\GENERATE_KEY'.
<suppressed ~117 debug messages>
Finding identical cells in module `\MODIFIED_AES128_V2'.
Removed a total of 39 cells.

11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SUB_BYTES..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SHIFT_ROWS..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ROUND_ITERATION..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \FORWARD_SUBSTITUTION_BOX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LAST_ROUND..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MIX_COLUMNS..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \GENERATE_KEY..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MODIFIED_AES128_V2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SUB_BYTES.
  Optimizing cells in module \SHIFT_ROWS.
  Optimizing cells in module \ROUND_ITERATION.
  Optimizing cells in module \FORWARD_SUBSTITUTION_BOX.
  Optimizing cells in module \LAST_ROUND.
  Optimizing cells in module \MIX_COLUMNS.
  Optimizing cells in module \GENERATE_KEY.
  Optimizing cells in module \MODIFIED_AES128_V2.
Performed a total of 0 changes.

11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SUB_BYTES'.
Finding identical cells in module `\SHIFT_ROWS'.
Finding identical cells in module `\ROUND_ITERATION'.
Finding identical cells in module `\FORWARD_SUBSTITUTION_BOX'.
Finding identical cells in module `\LAST_ROUND'.
Finding identical cells in module `\MIX_COLUMNS'.
Finding identical cells in module `\GENERATE_KEY'.
<suppressed ~27 debug messages>
Finding identical cells in module `\MODIFIED_AES128_V2'.
Removed a total of 9 cells.

11.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1090 ($dff) from module GENERATE_KEY.
Removing $procdff$1089 ($dff) from module GENERATE_KEY.
Replaced 2 DFF cells.

11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SUB_BYTES..
Finding unused cells or wires in module \SHIFT_ROWS..
Finding unused cells or wires in module \ROUND_ITERATION..
Finding unused cells or wires in module \FORWARD_SUBSTITUTION_BOX..
Finding unused cells or wires in module \LAST_ROUND..
Finding unused cells or wires in module \MIX_COLUMNS..
Finding unused cells or wires in module \GENERATE_KEY..
Finding unused cells or wires in module \MODIFIED_AES128_V2..
Removed 0 unused cells and 367 unused wires.
<suppressed ~9 debug messages>

11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module FORWARD_SUBSTITUTION_BOX.
Optimizing module GENERATE_KEY.
Optimizing module LAST_ROUND.
Optimizing module MIX_COLUMNS.
Optimizing module MODIFIED_AES128_V2.
Optimizing module ROUND_ITERATION.
Optimizing module SHIFT_ROWS.
Optimizing module SUB_BYTES.

11.9. Rerunning OPT passes. (Maybe there is more to do..)

11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \FORWARD_SUBSTITUTION_BOX..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \GENERATE_KEY..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LAST_ROUND..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MIX_COLUMNS..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MODIFIED_AES128_V2..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ROUND_ITERATION..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SHIFT_ROWS..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SUB_BYTES..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \FORWARD_SUBSTITUTION_BOX.
  Optimizing cells in module \GENERATE_KEY.
  Optimizing cells in module \LAST_ROUND.
  Optimizing cells in module \MIX_COLUMNS.
  Optimizing cells in module \MODIFIED_AES128_V2.
  Optimizing cells in module \ROUND_ITERATION.
  Optimizing cells in module \SHIFT_ROWS.
  Optimizing cells in module \SUB_BYTES.
Performed a total of 0 changes.

11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\FORWARD_SUBSTITUTION_BOX'.
Finding identical cells in module `\GENERATE_KEY'.
Finding identical cells in module `\LAST_ROUND'.
Finding identical cells in module `\MIX_COLUMNS'.
Finding identical cells in module `\MODIFIED_AES128_V2'.
Finding identical cells in module `\ROUND_ITERATION'.
Finding identical cells in module `\SHIFT_ROWS'.
Finding identical cells in module `\SUB_BYTES'.
Removed a total of 0 cells.

11.13. Executing OPT_RMDFF pass (remove dff with constant values).

11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \FORWARD_SUBSTITUTION_BOX..
Finding unused cells or wires in module \GENERATE_KEY..
Finding unused cells or wires in module \LAST_ROUND..
Finding unused cells or wires in module \MIX_COLUMNS..
Finding unused cells or wires in module \MODIFIED_AES128_V2..
Finding unused cells or wires in module \ROUND_ITERATION..
Finding unused cells or wires in module \SHIFT_ROWS..
Finding unused cells or wires in module \SUB_BYTES..

11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module FORWARD_SUBSTITUTION_BOX.
Optimizing module GENERATE_KEY.
Optimizing module LAST_ROUND.
Optimizing module MIX_COLUMNS.
Optimizing module MODIFIED_AES128_V2.
Optimizing module ROUND_ITERATION.
Optimizing module SHIFT_ROWS.
Optimizing module SUB_BYTES.

11.16. Finished OPT passes. (There is nothing left to do.)

12. Executing Verilog backend.
Dumping module `\FORWARD_SUBSTITUTION_BOX'.
Dumping module `\GENERATE_KEY'.
Dumping module `\LAST_ROUND'.
Dumping module `\MIX_COLUMNS'.
Dumping module `\MODIFIED_AES128_V2'.
Dumping module `\ROUND_ITERATION'.
Dumping module `\SHIFT_ROWS'.
Dumping module `\SUB_BYTES'.

End of script. Logfile hash: 712ef0caae
CPU: user 2.04s system 0.02s, MEM: 20.69 MB total, 14.52 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 21% 2x write_verilog (0 sec), 18% 2x opt_clean (0 sec), ...
